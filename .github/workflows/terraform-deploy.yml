name: 'Terraform Deploy to Azure'

on:
  push:
    branches:
      - main
    paths:
      - 'infrastructure/**'
  pull_request:
    branches:
      - main
    paths:
      - 'infrastructure/**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        required: true
        default: 'dev'
        type: choice
        options:
        - dev
        - staging

env:
  TERRAFORM_VERSION: '1.5.7'
  TF_VAR_SUB_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

jobs:
  terraform-validate:
    name: 'Terraform Validate'
    runs-on: ubuntu-latest
    
    steps:
    - name: 'Checkout'
      uses: actions/checkout@v4
    
    - name: 'Setup Terraform'
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}
    
    - name: 'Azure Login'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: 'Terraform Init - Dev'
      run: |
        cd infrastructure/environments/development
        terraform init \
          -backend-config="resource_group_name=terraform-state-rg" \
          -backend-config="storage_account_name=tfdevbackend2025peter" \
          -backend-config="container_name=tfstate" \
          -backend-config="key=dev.tfstate" \
          -backend-config="subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}" \
          -backend-config="tenant_id=${{ secrets.AZURE_TENANT_ID }}"
    
    - name: 'Terraform Validate'
      run: |
        cd infrastructure/environments/development
        terraform validate
    
    - name: 'Terraform Format Check'
      run: |
        cd infrastructure/environments/development
        terraform fmt -check
  
  terraform-plan-dev:
    name: 'Terraform Plan - Dev'
    runs-on: ubuntu-latest
    needs: terraform-validate
    if: github.event_name == 'pull_request' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'dev')
    
    steps:
    - name: 'Checkout'
      uses: actions/checkout@v4
    
    - name: 'Setup Terraform'
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}
    
    - name: 'Azure Login'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: 'Terraform Init'
      run: |
        cd infrastructure/environments/development
        terraform init \
          -backend-config="resource_group_name=terraform-state-rg" \
          -backend-config="storage_account_name=tfdevbackend2025peter" \
          -backend-config="container_name=tfstate" \
          -backend-config="key=dev.tfstate" \
          -backend-config="subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}" \
          -backend-config="tenant_id=${{ secrets.AZURE_TENANT_ID }}"
    
    - name: 'Terraform Plan'
      run: |
        cd infrastructure/environments/development
        terraform plan -var-file=terraform.tfvars -out=tfplan
    
    - name: 'Upload Plan'
      uses: actions/upload-artifact@v4
      with:
        name: terraform-plan-dev
        path: infrastructure/environments/development/tfplan
  
  terraform-apply-dev:
    name: 'Terraform Apply - Dev'
    runs-on: ubuntu-latest
    needs: terraform-validate
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: dev
    
    steps:
    - name: 'Checkout'
      uses: actions/checkout@v4
    
    - name: 'Setup Terraform'
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}
    
    - name: 'Azure Login'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: 'Terraform Init'
      run: |
        cd infrastructure/environments/development
        terraform init \
          -backend-config="resource_group_name=terraform-state-rg" \
          -backend-config="storage_account_name=tfdevbackend2025peter" \
          -backend-config="container_name=tfstate" \
          -backend-config="key=dev.tfstate" \
          -backend-config="subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}" \
          -backend-config="tenant_id=${{ secrets.AZURE_TENANT_ID }}"
    
    - name: 'Terraform Apply'
      run: |
        cd infrastructure/environments/development
        terraform apply -var-file=terraform.tfvars -auto-approve

  terraform-apply-staging:
    name: 'Terraform Apply - Staging'
    runs-on: ubuntu-latest
    needs: terraform-validate
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'staging'
    environment: staging
    
    steps:
    - name: 'Checkout'
      uses: actions/checkout@v4
    
    - name: 'Setup Terraform'
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}
    
    - name: 'Azure Login'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: 'Terraform Init'
      run: |
        cd infrastructure/environments/staging
        terraform init \
          -backend-config="resource_group_name=terraform-state-rg" \
          -backend-config="storage_account_name=tfdevbackend2025peter" \
          -backend-config="container_name=tfstate" \
          -backend-config="key=staging.tfstate" \
          -backend-config="subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}" \
          -backend-config="tenant_id=${{ secrets.AZURE_TENANT_ID }}"
    
    - name: 'Terraform Apply'
      run: |
        cd infrastructure/environments/staging
        terraform apply -var-file=terraform.tfvars -auto-approve
