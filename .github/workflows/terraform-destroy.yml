name: 'Terraform Destroy'

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to destroy'
        required: true
        type: choice
        options:
        - development
        - staging
      confirm_destroy:
        description: 'Type "destroy" to confirm destruction'
        required: true
        type: string

env:
  TERRAFORM_VERSION: '1.5.7'
  TF_VAR_SUB_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

jobs:
  terraform-plan-destroy:
    name: 'Terraform Plan Destroy'
    runs-on: ubuntu-latest
    if: github.event.inputs.confirm_destroy == 'destroy'
    
    steps:
    - name: 'Checkout'
      uses: actions/checkout@v4
    
    - name: 'Setup Terraform'
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}
    
    - name: 'Azure Login'
      uses: azure/login@v1
      with:
        creds: |
          {
            "clientId": "${{ secrets.AZURE_CLIENT_ID }}",
            "clientSecret": "${{ secrets.AZURE_CLIENT_SECRET }}",
            "subscriptionId": "${{ secrets.AZURE_SUBSCRIPTION_ID }}",
            "tenantId": "${{ secrets.AZURE_TENANT_ID }}"
          }
    
    - name: 'Terraform Init'
      run: |
        cd infrastructure/environments/${{ github.event.inputs.environment }}
        terraform init \
          -backend-config="resource_group_name=terraform-state-rg" \
          -backend-config="storage_account_name=${{ secrets.AZURE_BACKEND_STORAGE_ACCOUNT }}" \
          -backend-config="container_name=tfstate" \
          -backend-config="key=${{ github.event.inputs.environment }}.tfstate" \
          -backend-config="subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}" \
          -backend-config="tenant_id=${{ secrets.AZURE_TENANT_ID }}"
    
    - name: 'Terraform Plan Destroy'
      run: |
        cd infrastructure/environments/${{ github.event.inputs.environment }}
        terraform plan -destroy -var-file=terraform.tfvars -out=destroy-plan
    
    - name: 'Upload Destroy Plan'
      uses: actions/upload-artifact@v4
      with:
        name: terraform-destroy-plan-${{ github.event.inputs.environment }}
        path: infrastructure/environments/${{ github.event.inputs.environment }}/destroy-plan

  terraform-destroy:
    name: 'Terraform Destroy'
    runs-on: ubuntu-latest
    needs: terraform-plan-destroy
    environment: ${{ github.event.inputs.environment }}-destroy
    
    steps:
    - name: 'Checkout'
      uses: actions/checkout@v4
    
    - name: 'Setup Terraform'
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}
    
    - name: 'Azure Login'
      uses: azure/login@v1
      with:
        creds: |
          {
            "clientId": "${{ secrets.AZURE_CLIENT_ID }}",
            "clientSecret": "${{ secrets.AZURE_CLIENT_SECRET }}",
            "subscriptionId": "${{ secrets.AZURE_SUBSCRIPTION_ID }}",
            "tenantId": "${{ secrets.AZURE_TENANT_ID }}"
          }
    
    - name: 'Terraform Init'
      run: |
        cd infrastructure/environments/${{ github.event.inputs.environment }}
        terraform init \
          -backend-config="resource_group_name=terraform-state-rg" \
          -backend-config="storage_account_name=${{ secrets.AZURE_BACKEND_STORAGE_ACCOUNT }}" \
          -backend-config="container_name=tfstate" \
          -backend-config="key=${{ github.event.inputs.environment }}.tfstate" \
          -backend-config="subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}" \
          -backend-config="tenant_id=${{ secrets.AZURE_TENANT_ID }}"
    
    - name: 'Terraform Destroy'
      run: |
        cd infrastructure/environments/${{ github.event.inputs.environment }}
        terraform destroy -var-file=terraform.tfvars -auto-approve
